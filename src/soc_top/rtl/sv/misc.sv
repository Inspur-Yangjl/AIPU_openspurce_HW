// This system-verilog module was generated by Vega
//               Please do not edit!

//---------------------------------------------------------------------------
//                                                                           
//              Inspur Confidential                                          
// Copyright (c) 2020 Inspur. All rights reserved
//                                                                           
// File : /nfs/work3/picasso.work/fanguangfeng/workspace/fanguangfeng.pcs225.default/design_repo/rtl/cpu_subsys/rtl/sv 
// Author  : Inspur Xi'an R&D                                                
// History : 2021-Mar.-2 15:30:47 PM - Created    
//                                                                           
//---------------------------------------------------------------------------

module misc (


    input [7:0] dma_int,
    input timer0_int_cmp,
    input timer0_int_ovf,
    input timer1_int_cmp,
    input timer1_int_ovf,
    input wdt_prewarning_int,
    input sw_int0,
    input sw_int1,
    input scu_int,
    input uart_int,
    input uart_tx_int,
    input uart_rx_int,
    input mac_int,
    output [7:0]dma_int_out,
    output timer0_int_ovf_out,
    output timer0_int_cmp_out,
    output timer1_int_ovf_out,
    output timer1_int_cmp_out,
    output wdt_prewarning_int_out,
    output sw_int0_out,
    output sw_int1_out,
    output scu_int_out,
    output uart_int_out,
    output uart_tx_int_out,
    output uart_rx_int_out,
    output mac_int_out,
    input core_clk,
    input core_rst_n
);

stdcc_sync2_rstn u0_dma_int_sync2_rstn (
    .din(dma_int[0]),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(dma_int_out[0])
);

stdcc_sync2_rstn u1_dma_int_sync2_rstn (
    .din(dma_int[1]),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(dma_int_out[1])
);

stdcc_sync2_rstn u2_dma_int_sync2_rstn (
    .din(dma_int[2]),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(dma_int_out[2])
);

stdcc_sync2_rstn u3_dma_int_sync2_rstn (
    .din(dma_int[3]),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(dma_int_out[3])
);

stdcc_sync2_rstn u4_dma_int_sync2_rstn (
    .din(dma_int[4]),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(dma_int_out[4])
);

stdcc_sync2_rstn u5_dma_int_sync2_rstn (
    .din(dma_int[5]),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(dma_int_out[5])
);

stdcc_sync2_rstn u6_dma_int_sync2_rstn (
    .din(dma_int[6]),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(dma_int_out[6])
);

stdcc_sync2_rstn u7_dma_int_sync2_rstn (
    .din(dma_int[7]),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(dma_int_out[7])
);

stdcc_sync2_rstn u_timer0_int_ovf_sync2_rstn (
    .din(timer0_int_ovf),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(timer0_int_ovf_out)
);

stdcc_sync2_rstn u_timer0_int_cmp_sync2_rstn (
    .din(timer0_int_cmp),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(timer0_int_cmp_out)
);

stdcc_sync2_rstn u_timer1_int_ovf_sync2_rstn (
    .din(timer1_int_ovf),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(timer1_int_ovf_out)
);

stdcc_sync2_rstn u_timer1_int_cmp_sync2_rstn (
    .din(timer1_int_cmp),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(timer1_int_cmp_out)
);

stdcc_sync2_rstn u_wdt_prewarning_int_sync2_rstn (
    .din(wdt_prewarning_int),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(wdt_prewarning_int_out)
);

stdcc_sync2_rstn u_sw_int0_sync2_rstn (
    .din(sw_int0),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(sw_int0_out)
);

stdcc_sync2_rstn u_sw_int1_sync2_rstn (
    .din(sw_int1),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(sw_int1_out)
);

stdcc_sync2_rstn u_scu_int_sync2_rstn (
    .din(scu_int),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(scu_int_out)
);

stdcc_sync2_rstn u_uart_int_sync2_rstn (
    .din(uart_int),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(uart_int_out)
);

stdcc_sync2_rstn u_uart_tx_int_sync2_rstn (
    .din(uart_tx_int),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(uart_tx_int_out)
);

stdcc_sync2_rstn u_uart_rx_int_sync2_rstn (
    .din(uart_rx_int),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(uart_rx_int_out)
);

stdcc_sync2_rstn u_mac_int_sync2_rstn (
    .din(mac_int),
    .clk(core_clk),
    .rstn(core_rst_n),
    .dout(mac_int_out)
);

endmodule
